إنشاء دالة rotate() تقوم بإجراء مماثل لـ enqueue(dequeue()) ولكن بطريقة أكثر كفاءة.
يمكننا تحقيق ذلك بتحريك المؤشر الأمامي front إلى العنصر التالي بدلًا من إزالة العنصر ثم إعادة إضافته.

public class ArrayQueue<E> {
    private E[] data;
    private int front = 0;
    private int size = 0;
    private static final int CAPACITY = 10;

    public ArrayQueue() {
        this(CAPACITY);
    }

    public ArrayQueue(int capacity) {
        data = (E[]) new Object[capacity];
    }

    public boolean isEmpty() {
        return size == 0;
    }

    public int size() {
        return size;
    }

    public void enqueue(E e) {
        if (size == data.length) throw new IllegalStateException("Queue is full");
        int avail = (front + size) % data.length;
        data[avail] = e;
        size++;
    }

    public E dequeue() {
        if (isEmpty()) return null;
        E result = data[front];
        data[front] = null;
        front = (front + 1) % data.length;
        size--;
        return result;
    }

    public void rotate() {
        if (size > 1) {
            front = (front + 1) % data.length;
        }
    }

    public void printQueue() {
        for (int i = 0; i < size; i++) {
            System.out.print(data[(front + i) % data.length] + " ");
        }
        System.out.println();
    }

    public static void main(String[] args) {
        ArrayQueue<Integer> queue = new ArrayQueue<>();
        queue.enqueue(1);
        queue.enqueue(2);
        queue.enqueue(3);
        queue.enqueue(4);

        System.out.print("Before rotate: ");
        queue.printQueue();

        queue.rotate();

        System.out.print("After rotate: ");
        queue.printQueue();
    }
}
